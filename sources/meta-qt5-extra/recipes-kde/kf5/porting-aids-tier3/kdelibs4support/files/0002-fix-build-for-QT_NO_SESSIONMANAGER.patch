From 4a7075fadc37994e3cea0b0f008fc3bfd26ffd9c Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Andreas=20M=C3=BCller?= <schnitzeltony@googlemail.com>
Date: Mon, 8 Dec 2014 13:13:15 +0100
Subject: [PATCH 2/3] fix build for QT_NO_SESSIONMANAGER
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Upstream-Status: pending

Signed-off-by: Andreas MÃ¼ller <schnitzeltony@googlemail.com>

---
 src/kdeui/kapplication.cpp       | 10 ++++++++++
 src/kdeui/ksessionmanager.cpp    |  2 ++
 src/kdeui/ksessionmanager.h      |  2 ++
 src/kdeui/kuniqueapplication.cpp |  4 ++++
 4 files changed, 18 insertions(+)

diff --git a/src/kdeui/kapplication.cpp b/src/kdeui/kapplication.cpp
index f42d6bd..83452f1 100644
--- a/src/kdeui/kapplication.cpp
+++ b/src/kdeui/kapplication.cpp
@@ -502,7 +502,11 @@ KApplication *KApplication::kApplication()
 
 KConfig *KApplication::sessionConfig()
 {
+#ifdef QT_NO_SESSIONMANAGER
+    return NULL;
+#else
     return KConfigGui::sessionConfig();
+#endif
 }
 
 void KApplication::reparseConfiguration()
@@ -552,6 +556,7 @@ void KApplication::commitData(QSessionManager &sm)
     d->session_save = true;
     bool canceled = false;
 
+#ifndef QT_NO_SESSIONMANAGER
     foreach (KSessionManager *it, KSessionManager::sessionClients()) {
         if ((canceled = !it->commitData(sm))) {
             break;
@@ -605,9 +610,11 @@ void KApplication::commitData(QSessionManager &sm)
     if (canceled) {
         sm.cancel();
     }
+#endif // QT_NO_SESSIONMANAGER
     d->session_save = false;
 }
 
+#ifndef QT_NO_SESSIONMANAGER
 #if HAVE_X11 && QT_VERSION < QT_VERSION_CHECK(5, 0, 0)
 static void checkRestartVersion(QSessionManager &sm)
 {
@@ -642,6 +649,7 @@ static void checkRestartVersion(QSessionManager &sm)
     }
 }
 #endif // HAVE_X11
+#endif // QT_NO_SESSIONMANAGER
 
 void KApplication::saveState(QSessionManager &sm)
 {
@@ -649,6 +657,7 @@ void KApplication::saveState(QSessionManager &sm)
 #ifdef __GNUC__
 #warning TODO: QSessionManager::handle() is gone in Qt5!
 #endif
+#ifndef QT_NO_SESSIONMANAGER
 #if HAVE_X11 && QT_VERSION < QT_VERSION_CHECK(5, 0, 0)
     static bool firstTime = true;
     mySmcConnection = (SmcConn) sm.handle();
@@ -725,6 +734,7 @@ void KApplication::saveState(QSessionManager &sm)
 #else
     Q_UNUSED(sm);
 #endif
+#endif // QT_NO_SESSIONMANAGER
     d->session_save = false;
 }
 
diff --git a/src/kdeui/ksessionmanager.cpp b/src/kdeui/ksessionmanager.cpp
index 3d5edd5..f6cf6ee 100644
--- a/src/kdeui/ksessionmanager.cpp
+++ b/src/kdeui/ksessionmanager.cpp
@@ -32,6 +32,7 @@ KSessionManager::~KSessionManager()
     sessionClients().removeAll(this);
 }
 
+#ifndef QT_NO_SESSIONMANAGER
 bool KSessionManager::saveState(QSessionManager &)
 {
     return true;
@@ -41,6 +42,7 @@ bool KSessionManager::commitData(QSessionManager &)
 {
     return true;
 }
+#endif // QT_NO_SESSIONMANAGER
 
 QList<KSessionManager *> &KSessionManager::sessionClients()
 {
diff --git a/src/kdeui/ksessionmanager.h b/src/kdeui/ksessionmanager.h
index e7462a4..bea2243 100644
--- a/src/kdeui/ksessionmanager.h
+++ b/src/kdeui/ksessionmanager.h
@@ -62,6 +62,7 @@ public:
 
        @deprecated Since 5.0 connect to the signal QGuiApplication::saveStateRequest(QSessionManager &)
      */
+#ifndef QT_NO_SESSIONMANAGER
     virtual bool saveState(QSessionManager &sm);
     /**
        See QApplication::commitData() for documentation.
@@ -75,6 +76,7 @@ public:
        @deprecated Since 5.0 connect to the signal QGuiApplication::commitDataRequest(QSessionManager &)
      */
     virtual bool commitData(QSessionManager &sm);
+#endif QT_NO_SESSIONMANAGER
 
     static QList<KSessionManager *> &sessionClients();
 
diff --git a/src/kdeui/kuniqueapplication.cpp b/src/kdeui/kuniqueapplication.cpp
index 1d7b3f0..b225f8b 100644
--- a/src/kdeui/kuniqueapplication.cpp
+++ b/src/kdeui/kuniqueapplication.cpp
@@ -349,7 +349,11 @@ void KUniqueApplication::Private::_k_newInstanceNoFork()
 
 bool KUniqueApplication::restoringSession()
 {
+#ifdef QT_NO_SESSIONMANAGER
+    return false;
+#else
     return d->firstInstance && isSessionRestored();
+#endif
 }
 
 int KUniqueApplication::newInstance()
-- 
1.8.3.1

