/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: 
 *
 * qdbusxml2cpp is Copyright (C) 2016 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef FILEINDEXERINTERFACE_H
#define FILEINDEXERINTERFACE_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface org.kde.baloo.fileindexer
 */
class OrgKdeBalooFileindexerInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.kde.baloo.fileindexer"; }

public:
    OrgKdeBalooFileindexerInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~OrgKdeBalooFileindexerInterface();

    Q_PROPERTY(QString currentFile READ currentFile)
    inline QString currentFile() const
    { return qvariant_cast< QString >(property("currentFile")); }

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> registerMonitor()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("registerMonitor"), argumentList);
    }

    inline QDBusPendingReply<> unregisterMonitor()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("unregisterMonitor"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void finishedIndexingFile(const QString &filePath);
    void startedIndexingFile(const QString &filePath);
};

namespace org {
  namespace kde {
    namespace baloo {
      typedef ::OrgKdeBalooFileindexerInterface fileindexer;
    }
  }
}
#endif
